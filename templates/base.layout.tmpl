{{define "base"}}

<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Document</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs4.min.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="../static/css/styles.css">


</head>
<body>


<nav class="navbar  navbar-expand-lg  navbar-dark bg-dark">
  <a class="navbar-brand" href="#">Navbar</a>
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/about">About</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          Rooms
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <a class="dropdown-item" href="/generals-quarters">General's Quarters</a>
          <a class="dropdown-item" href="/majors-suite">Major Suite</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/search-availability">Booknow</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="/contact">Contact</a>
      </li>
    </ul>
  </div>
</nav>

<body>


    {{block "content" .}}




    {{end}}



    <div class="row my-footer">
      <div class="col">
        start
      </div>
      <div class="col">
        middle
      </div>
      <div class="col">
        end
      </div>
    </div>



    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



    {{block "js" .}}

    {{end}}

    <script>
      let attention = prompt();

      (function() {
        'use strict';
        window.addEventListener('load', function() {
          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          let forms = document.getElementsByClassName('needs-validation');
          // Loop over them and prevent submission
          Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
              if (form.checkValidity() === false) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        }, false);
      })();





      function notify(title,msg,icon,confirmButtonText){
        Swal.fire({
          title: title,
          text: msg,
          icon: icon,
          confirmButtonText: confirmButtonText
        })
      }



      function prompt(){
        let toast = function (c){
          const {
            msg = "",
            icon = "success",
            position = "top-end",

          } = c;
          const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            showConfirmButton: false,
            timer: 3000,
            icon:icon,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.addEventListener('mouseenter', Swal.stopTimer)
              toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
          })

          Toast.fire({})

        }
        let success = function (c){
          const {
            msg = "",
            title = "",
            footer = "",
          } = c

          Swal.fire({
            icon: 'success',
            title: title,
            text: msg,
            footer: '<a href="">Why do I have this issue?</a>'
          })
        }

        let error = function (c){
          const {
            msg = "",
            title = "",
            footer = "",
          } = c

          Swal.fire({
            icon: 'error',
            title: title,
            text: msg,
            footer: '<a href="">Why do I have this issue?</a>'
          })
        }


        async function custom(c){
          const{
            msg="",
            title="",
          }= c;
          const { value: result } = await Swal.fire({
            title: title,
            backdrop: false,
            showCancelButton : true,
            html:msg,
            focusConfirm: false,
            willOpen: () => {
            if(c.willOpen() !== undefined){
                c.willOpen()
            }
            },
            didOpen: () => {
              if(c.didOpen() !== undefined){
                  c.didOpen()
              }
            },
            preConfirm: () => {
              return [
                document.getElementById('start').value,
                document.getElementById('end').value
              ]
            }
          })

            if (result){
                if (result.dismiss !== Swal.DismissReason.cancel){
                    if (result.value !== ""){
                        if(c.callback !== undefined){
                            c.callback(result);
                        }
                    }else{
                        c.callback(false);
                    }
                }else{
                    c.callback(false);
                }
            }
        }

        return {
          toast:toast,
          success: success,
          error:error,
          custom:custom
        }
      }


    </script>

</body>
</html>
{{end}}